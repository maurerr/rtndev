From e46906b80e7662fb78d305f576412f9fa4a22218 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Hugo=20Beauz=C3=A9e-Luyssen?= <hugo@beauzee.fr>
Date: Mon, 23 Apr 2018 12:05:42 +0200
Subject: [PATCH 4/7] EbmlSInteger: Use <limits> instead of <climits>

The former is the proper header to use for std::numerical_limits
---
 src/EbmlSInteger.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/EbmlSInteger.cpp b/src/EbmlSInteger.cpp
index 33f3637..b930f7d 100644
--- a/src/EbmlSInteger.cpp
+++ b/src/EbmlSInteger.cpp
@@ -33,7 +33,7 @@
   \author Moritz Bunkus <moritz @ bunkus.org>
 */
 #include <cassert>
-#include <climits>
+#include <limits>
 
 #include "ebml/EbmlSInteger.h"

From eaaf372e954bf2cafd85ca04c4630837065021cb Mon Sep 17 00:00:00 2001
From: Steve Lhomme <robux4@ycbcr.xyz>
Date: Tue, 29 May 2018 12:51:21 +0200
Subject: [PATCH 7/7] EbmlSInteger: use our internal integer types rather than
 the standard ones

Some old targets do not have the proper ones.
---
 src/EbmlSInteger.cpp | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/src/EbmlSInteger.cpp b/src/EbmlSInteger.cpp
index b930f7d..7f14187 100644
--- a/src/EbmlSInteger.cpp
+++ b/src/EbmlSInteger.cpp
@@ -43,12 +43,12 @@
 
 namespace {
 
-int64_t
-ToSigned(uint64_t u) {
-  if (u <= std::numeric_limits<int64_t>::max())
-    return static_cast<int64_t>(u);
+int64
+ToSigned(uint64 u) {
+  if (u <= std::numeric_limits<int64>::max())
+    return static_cast<int64>(u);
 
-  return static_cast<int64_t>(u - std::numeric_limits<int64_t>::min()) + std::numeric_limits<int64_t>::min();
+  return static_cast<int64>(u - std::numeric_limits<int64>::min()) + std::numeric_limits<int64>::min();
 }
 
 }
@@ -144,7 +144,7 @@ filepos_t EbmlSInteger::ReadData(IOCallback & input, ScopeMode ReadFully)
     binary Buffer[8];
     input.readFully(Buffer, GetSize());
 
-    uint64_t TempValue = Buffer[0] & 0x80 ? std::numeric_limits<uint64_t>::max() : 0;
+    uint64 TempValue = Buffer[0] & 0x80 ? std::numeric_limits<uint64>::max() : 0;
 
     for (unsigned int i=0; i<GetSize(); i++) {
       TempValue <<= 8;
